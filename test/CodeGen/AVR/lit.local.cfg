if not 'AVR' in config.root.targets:
    config.unsupported = True

config.suffixes = ['.ll', '.cpp']

import os, lit.TestRunner
from lit.formats import ShTest

targets = set(config.root.targets_to_build.split())
if not 'AVR' in targets:
  config.unsupported = True

if 'AVRLIT_PORT' in os.environ:
  config.environment['AVRLIT_PORT'] = os.environ['AVRLIT_PORT']

class AVRCodeGenTest(ShTest):
  def __init__(self):
    ShTest.__init__(self)

  def execute(self, test, litConfig):
    if test.getSourcePath().endswith('.cpp') and not 'AVRLIT_PORT' in os.environ:
      return (lit.Test.UNSUPPORTED, 'AVRLIT_PORT environment variable is not set')

    return ShTest.execute(self, test, litConfig)


config.test_format = AVRCodeGenTest()
