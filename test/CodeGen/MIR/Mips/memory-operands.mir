# RUN: llc -march=mipsel -mcpu=mips16 -relocation-model=pic -start-after branch-folder -stop-after branch-folder -o /dev/null %s | FileCheck %s
# This test ensures that the MIR parser parses the call entry pseudo source
# values in memory operands correctly.

--- |
  define i32 @test(i32 %a) {
  entry:
    %call = call i32 @foo(i32 %a)
    ret i32 0
  }

  declare i32 @foo(i32)
...
---
name:            test
tracksRegLiveness: true
liveins:
  - { reg: '%a0' }
frameInfo:
  stackSize:       24
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 16
stack:
  - { id: 0, type: spill-slot, offset: -4, size: 4, alignment: 4,
      callee-saved-register: '%ra' }
body:             |
  bb.0.entry:
    liveins: %a0, %ra

    Save16 %ra, 24, implicit-def %sp, implicit %sp
    CFI_INSTRUCTION .cfi_def_cfa_offset 24
    CFI_INSTRUCTION .cfi_offset %ra_64, -4
    %v0, %v1 = GotPrologue16 $_gp_disp, $_gp_disp
    %v0 = SllX16 killed %v0, 16
    %v0 = AdduRxRyRz16 killed %v1, killed %v0
  ; CHECK-LABEL: name: test
  ; CHECK: %v1 = LwRxRyOffMemX16 %v0, @foo, 0 :: (load 4 from @foo)
    %v1 = LwRxRyOffMemX16 %v0, @foo, 0 :: (load 4 from @foo)
    %t9 = COPY %v1
    %gp = COPY killed %v0
    JumpLinkReg16 killed %v1, csr_o32, implicit-def %ra, implicit killed %t9, implicit %a0, implicit killed %gp, implicit-def %sp, implicit-def dead %v0
    %v0 = LiRxImmX16 0
    %ra = Restore16 24, implicit-def %sp, implicit %sp
    RetRA16 implicit %v0
...
